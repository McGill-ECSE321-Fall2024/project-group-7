class GameCenter {
  name;
  Time open;
  Time close;
  storePolicy;
}

class User {
  abstract;
  unique UUID id;
  unique email;
  unique username;
  password;
  Boolean isActive;
}

class Staff {
  isA User;
  abstract;
  }

class Employee {
  isA Staff;
}

class Manager {
  isA Staff;

  0..1 -> * Request requestLog;
}

class Client {
  isA User;
  phoneNumber;
  deliveryAddress;
  Integer numberOfFlags;


  * -> * Purchase purchaseHistory;
  * -> * Game wishlist;
  * -> * PaymentInfo paymentInformations;
  * -> * Review thumbsUp;
  * -> * Review thumbsDown;
}

class Promotion {
  unique UUID id;
  Float newPrice;
}

class Game {
  enum Category {ACTION, ROLEPLAY};
  enum GeneralFeeling {VERYPOSITIVE, POSITIVE ,NEUTRAL, NEGATIVE, VERYNEGATIVE};
  unique UUID id;
  title;
  Float price;
  description;
  Float rating;
  Integer remainingQuantity;
  Boolean isOffered;
  Category category;
  GeneralFeeling publicOpinion;



  0..1 -> * Review reviews;
  0..1 -> 0..1 Promotion promotion;
}

class Request {
  abstract;
  enum Status {PENDING, APPROVED, DENIED};
  Status status;

  0..1 -> 1 Staff createdRequest;
}

class GameRequest {
  isA Request;
  enum Type {ADD, REMOVE};

  0..1 -> 1 Game game;
}

class UserRequest {
  isA Request;

  0..1 -> 1 Client userFacingJudgement;
}

class Purchase {
  unique UUID id;
  Float totalPrice;
  Integer trackingCode;
  Date purchaseDate;
  refundReason;

  0..1 -> 1..* Game associatedGames;
}

class Review {
  enum Rating {ONE, TWO, THREE, FOUR, FIVE}
  unique UUID id;
  author;
  review;
  managerReply;
  Rating stars;
  Integer thumbsUp;
  Integer thumbsDown;
}

class PaymentInfo {
  unique UUID id;
  Integer cardNumber;
  Integer cvv;
  Integer expiryMonth;
  Integer expiryYear;
}
